[
  {
    "objectID": "schedule.html",
    "href": "schedule.html",
    "title": "Schedule",
    "section": "",
    "text": "For Qmd files (markdown document with Quarto which are cross-language executable code), go to the course GitHub repository and navigate the directories, or best of all clone the repo and navigate within RStudio or your text browser and R console.\nCurrent Website: https://mbutler808.github.io/rclass-2025/\n2023 Website: https://mbutler808.github.io/rclass/\n\n\n\n\n\n\n\n\n\n\nWeek\nDates\nTopics\nProjects\n\n\n\n\nModule 1\n\nComputational Tools for Data Science\n\n\n\n\n\n\n\n\n\n\n\nWeek 1\nJan 14\n👋 Installing R/RStudio, GitHub [html] [Qmd]\n\nWatch [rest of podcast starting at 4:00] R manual [2.1, 2.2, 2.3, 2.6]\n\n\n\nJan 16\n👩‍💻 Shell scripts, File Organization [html] [Qmd]\n\n\n\n\nWeek 2\nJan 21\n🐙 Intro to Git and GitHub [html] [Qmd]\n🌴 Project 0 [html] [Qmd]\n\n\n\n\n\n\n\n\n\n\nModule 2\n\nReproducible Research\n\n\n\n\n\n\n\n\n\n\n\n\nJan 23\n🐙 Reproducible Research [html] [Qmd]\n\n\n\n\nWeek 3\nJan 28\n🐙 Literate Programming / Intro to Quarto [html] [Qmd]\n\n\n\n\n\nJan 30\n🔬 What is the Question? [[html]] [[Qmd]]\n\n\n\n\n\n\n\n\n\n\n\nModule 3\n\nData Analysis in R \n\n\n\n\n\n\n\n\n\n\n\n\nFeb 4\n👓 Reading/Writing data [[html]] [[Qmd]]\n🍂 Project 0 due\n\n\n\n\nFeb 6\n👓 Reference Management [[html]] [[Qmd]]\n\n\n\n\nWeek 4\nFeb 11\n🐙 Scripts [[html]] [[Qmd]]\n\n\n\n\n\nFeb 13\n🔩 Data [[html]] [[Qmd]]\n\n\n\n\n\n\n\n\n\n\n\nModule 3\n\nData Visulization in R\n\n\n\n\n\n\n\n\n\n\n\nWeek 5\nFeb 18\n🔪 Tidying Data [[html]] [[Qmd]]\n🌱 Project 1 assigned\n\n\n\n\nFeb 20\n📊 Plotting Systems (Base R) [[html]] [[Qmd]]\n\n\n\n\n\n\n\n\n\n\n\nWeek 6\nFeb 25\n📊 Plotting with ggplot2 [[html]] [[Qmd]]\n\n\n\n\n\nFeb 27\n📊 ggplot2 continued\n🍂 Project 1 due\n\n\n\n\n\n\n\n\n\n\nModule 4\n\nTour of Stats in R and Data Wrangling\n\n\n\n\n\n\n\n\n\n\n\nWeek 7\nMar 4\n🐒 Tidyverse and data wrangling [[html]] [[Qmd]]\n\n\n\n\n\nMar 6\n🐎 A tour of some multivariate methods in R [[html]] [[Qmd]]\n🌱 Project 2 assigned\n\n\n\n\n\n\n\n\n\n\nWeek 8\nMar 6\n📆 A tour of some univariate methods in R [[html]] [[Qmd]]\n\n\n\n\n\nMar 11\n🐎 Joining a.k.a. merging data [[html]] [[Qmd]]\n\n\n\n\n\nMar 13\n🐎 Reshaping data [[html]] [[Qmd]]\n\n\n\n\n\n\n\n\n\n\n\nModule 5\n\nProgramming Elements\n\n\n\n\n\n\n\n\n\n\n\nWeek 9\nMar 18\n🤝 Spring Break\n\n\n\n\n\nMar 20\n☀️ Spring Break\n\n\n\n\n\n\n\n\n\n\n\nWeek 10\nMar 20\n🍄 Functions [[html]] [[Qmd]]\n\n\n\n\n\n\n\n\n\n\n\n\nMar 25\n🌵 Lists and For Loops [[html]] [[Qmd]]\n🍂 Project 2 due\n\n\n\n\n\n\n\n\n\n\n\nMar 27\n🌵 Apply Functions [[html]] [[Qmd]]\n\n\n\n\n\n\n\n\n\n\n\nWeek 11\nApr 1\n🎡 Program Flow [[html]] [[Qmd]]\n\n\n\n\n\n\n\n\n\n\n\nModule 6\n\nIntro to Morphometrics\n\n\n\n\n\n\n\n\n\n\n\n\nApr 3\n📏 Intro to Morphometrics [[html]] [[Qmd]]\n\n\n\n\n\n\n\n\n\n\n\nWeek 12\nApr 8\n📐 Landmark-based Morphometrics\n\n\n\n\n\n\n\n\n\n\n\n\nApr 10\n💀 3D Morphometrics\n🌰 Project 3 data check due\n\n\n\n\n\n\n\n\n\n\nModule 7\n\nPhylogenetic Trees\n\n\n\n\n\n\n\n\n\n\n\nWeek 13\nApr 15\n🌱 Trees as Data Objects\n\n\n\n\n\nApr 17\n🌴 Reading and writing trees, ape, ggtree, treeio\n\n\n\n\n\n\n\n\n\n\n\nWeek 14\nApr 22\n🌳 Reshaping Trees\n\n\n\n\n\n\n\n\n\n\n\n\nApr 24\n🌺 Annotating Tree Plots\n📝 Project 3 peer review due\n\n\n\n\n\n\n\n\n\n\nModule 8\n\nOther Topics\n\n\n\n\n\n\n\n\n\n\n\nWeek 15\nApr 29\n🐍 Parsing Data from any Format\n\n\n\n\n\n\n\n\n\n\n\n\nMay 1\n🏆 Final Presentations\n💐 Project 3 presentation (in class)\n\n\n\n\n\n\n\n\n\n\nWeek 16\nMay 6\n🏆 Final Presentations\n💐 Project 3 presentation (in class)\n\n\n\n\n\n\n\n\n\n\n\nMay 7\n\n🎊 Project 3 due"
  },
  {
    "objectID": "schedule.html#schedule-and-course-materials",
    "href": "schedule.html#schedule-and-course-materials",
    "title": "Schedule",
    "section": "",
    "text": "For Qmd files (markdown document with Quarto which are cross-language executable code), go to the course GitHub repository and navigate the directories, or best of all clone the repo and navigate within RStudio or your text browser and R console.\nCurrent Website: https://mbutler808.github.io/rclass-2025/\n2023 Website: https://mbutler808.github.io/rclass/\n\n\n\n\n\n\n\n\n\n\nWeek\nDates\nTopics\nProjects\n\n\n\n\nModule 1\n\nComputational Tools for Data Science\n\n\n\n\n\n\n\n\n\n\n\nWeek 1\nJan 14\n👋 Installing R/RStudio, GitHub [html] [Qmd]\n\nWatch [rest of podcast starting at 4:00] R manual [2.1, 2.2, 2.3, 2.6]\n\n\n\nJan 16\n👩‍💻 Shell scripts, File Organization [html] [Qmd]\n\n\n\n\nWeek 2\nJan 21\n🐙 Intro to Git and GitHub [html] [Qmd]\n🌴 Project 0 [html] [Qmd]\n\n\n\n\n\n\n\n\n\n\nModule 2\n\nReproducible Research\n\n\n\n\n\n\n\n\n\n\n\n\nJan 23\n🐙 Reproducible Research [html] [Qmd]\n\n\n\n\nWeek 3\nJan 28\n🐙 Literate Programming / Intro to Quarto [html] [Qmd]\n\n\n\n\n\nJan 30\n🔬 What is the Question? [[html]] [[Qmd]]\n\n\n\n\n\n\n\n\n\n\n\nModule 3\n\nData Analysis in R \n\n\n\n\n\n\n\n\n\n\n\n\nFeb 4\n👓 Reading/Writing data [[html]] [[Qmd]]\n🍂 Project 0 due\n\n\n\n\nFeb 6\n👓 Reference Management [[html]] [[Qmd]]\n\n\n\n\nWeek 4\nFeb 11\n🐙 Scripts [[html]] [[Qmd]]\n\n\n\n\n\nFeb 13\n🔩 Data [[html]] [[Qmd]]\n\n\n\n\n\n\n\n\n\n\n\nModule 3\n\nData Visulization in R\n\n\n\n\n\n\n\n\n\n\n\nWeek 5\nFeb 18\n🔪 Tidying Data [[html]] [[Qmd]]\n🌱 Project 1 assigned\n\n\n\n\nFeb 20\n📊 Plotting Systems (Base R) [[html]] [[Qmd]]\n\n\n\n\n\n\n\n\n\n\n\nWeek 6\nFeb 25\n📊 Plotting with ggplot2 [[html]] [[Qmd]]\n\n\n\n\n\nFeb 27\n📊 ggplot2 continued\n🍂 Project 1 due\n\n\n\n\n\n\n\n\n\n\nModule 4\n\nTour of Stats in R and Data Wrangling\n\n\n\n\n\n\n\n\n\n\n\nWeek 7\nMar 4\n🐒 Tidyverse and data wrangling [[html]] [[Qmd]]\n\n\n\n\n\nMar 6\n🐎 A tour of some multivariate methods in R [[html]] [[Qmd]]\n🌱 Project 2 assigned\n\n\n\n\n\n\n\n\n\n\nWeek 8\nMar 6\n📆 A tour of some univariate methods in R [[html]] [[Qmd]]\n\n\n\n\n\nMar 11\n🐎 Joining a.k.a. merging data [[html]] [[Qmd]]\n\n\n\n\n\nMar 13\n🐎 Reshaping data [[html]] [[Qmd]]\n\n\n\n\n\n\n\n\n\n\n\nModule 5\n\nProgramming Elements\n\n\n\n\n\n\n\n\n\n\n\nWeek 9\nMar 18\n🤝 Spring Break\n\n\n\n\n\nMar 20\n☀️ Spring Break\n\n\n\n\n\n\n\n\n\n\n\nWeek 10\nMar 20\n🍄 Functions [[html]] [[Qmd]]\n\n\n\n\n\n\n\n\n\n\n\n\nMar 25\n🌵 Lists and For Loops [[html]] [[Qmd]]\n🍂 Project 2 due\n\n\n\n\n\n\n\n\n\n\n\nMar 27\n🌵 Apply Functions [[html]] [[Qmd]]\n\n\n\n\n\n\n\n\n\n\n\nWeek 11\nApr 1\n🎡 Program Flow [[html]] [[Qmd]]\n\n\n\n\n\n\n\n\n\n\n\nModule 6\n\nIntro to Morphometrics\n\n\n\n\n\n\n\n\n\n\n\n\nApr 3\n📏 Intro to Morphometrics [[html]] [[Qmd]]\n\n\n\n\n\n\n\n\n\n\n\nWeek 12\nApr 8\n📐 Landmark-based Morphometrics\n\n\n\n\n\n\n\n\n\n\n\n\nApr 10\n💀 3D Morphometrics\n🌰 Project 3 data check due\n\n\n\n\n\n\n\n\n\n\nModule 7\n\nPhylogenetic Trees\n\n\n\n\n\n\n\n\n\n\n\nWeek 13\nApr 15\n🌱 Trees as Data Objects\n\n\n\n\n\nApr 17\n🌴 Reading and writing trees, ape, ggtree, treeio\n\n\n\n\n\n\n\n\n\n\n\nWeek 14\nApr 22\n🌳 Reshaping Trees\n\n\n\n\n\n\n\n\n\n\n\n\nApr 24\n🌺 Annotating Tree Plots\n📝 Project 3 peer review due\n\n\n\n\n\n\n\n\n\n\nModule 8\n\nOther Topics\n\n\n\n\n\n\n\n\n\n\n\nWeek 15\nApr 29\n🐍 Parsing Data from any Format\n\n\n\n\n\n\n\n\n\n\n\n\nMay 1\n🏆 Final Presentations\n💐 Project 3 presentation (in class)\n\n\n\n\n\n\n\n\n\n\nWeek 16\nMay 6\n🏆 Final Presentations\n💐 Project 3 presentation (in class)\n\n\n\n\n\n\n\n\n\n\n\nMay 7\n\n🎊 Project 3 due"
  },
  {
    "objectID": "syllabus.html",
    "href": "syllabus.html",
    "title": "Zool710: Data Science in R for Biologists Syllabus",
    "section": "",
    "text": "Delivery: In person\nCourse time: Tuesdays and Thursdays from 9-10:15am\nCourse location: KELLER 204\nAssignments: Weekly small quizzes, four projects\n\n\n\nTo add the course: Let me know so I can give you an override\nRegister for ZOOL710 CRN 89354 3 credits.\nAttendance is highly recommended for personal help, Q&A, and group work. Repetition is key.\nPlease contact course instructor if interested in auditing.\nUndergraduates are welcome to join with approval.\n\n\nMarguerite A. Butler (https://butlerlab.org)\n\nOffice Location: Edmondson 318\nEmail: mbutler808 at gmail.com\nOffice Hours: After class and by appointment\n\n\n\nIn order of preference, here is a preferred list of ways to get help:\n\nI strongly encourage you to use the course DISCORD server, before joining office hours. You can get your answers faster, and other students in the class (who likely have similar questions) can also benefit from the questions and answers given. Everyone is encouraged to participate.\nSee me after class.\nMake an appointment by email."
  },
  {
    "objectID": "syllabus.html#course-information",
    "href": "syllabus.html#course-information",
    "title": "Zool710: Data Science in R for Biologists Syllabus",
    "section": "",
    "text": "Delivery: In person\nCourse time: Tuesdays and Thursdays from 9-10:15am\nCourse location: KELLER 204\nAssignments: Weekly small quizzes, four projects\n\n\n\nTo add the course: Let me know so I can give you an override\nRegister for ZOOL710 CRN 89354 3 credits.\nAttendance is highly recommended for personal help, Q&A, and group work. Repetition is key.\nPlease contact course instructor if interested in auditing.\nUndergraduates are welcome to join with approval.\n\n\nMarguerite A. Butler (https://butlerlab.org)\n\nOffice Location: Edmondson 318\nEmail: mbutler808 at gmail.com\nOffice Hours: After class and by appointment\n\n\n\nIn order of preference, here is a preferred list of ways to get help:\n\nI strongly encourage you to use the course DISCORD server, before joining office hours. You can get your answers faster, and other students in the class (who likely have similar questions) can also benefit from the questions and answers given. Everyone is encouraged to participate.\nSee me after class.\nMake an appointment by email."
  },
  {
    "objectID": "syllabus.html#important-links",
    "href": "syllabus.html#important-links",
    "title": "Zool710: Data Science in R for Biologists Syllabus",
    "section": "Important Links",
    "text": "Important Links\n\nCourse website: coming soon.\nGitHub repository with all course material: coming soon.\nDiscord server: https://discord.gg/fagxUbq5Rd"
  },
  {
    "objectID": "syllabus.html#learning-objectives",
    "href": "syllabus.html#learning-objectives",
    "title": "Zool710: Data Science in R for Biologists Syllabus",
    "section": "Learning Objectives:",
    "text": "Learning Objectives:\nUpon successfully completing this course, students will be able to:\n\nInstall and configure software necessary for a statistical programming environment\nDiscuss generic programming language concepts as they are implemented in a high-level statistical language\nWrite, debug, and comment your code in base R and the tidyverse\nBuild basic data visualizations using R and the tidyverse\nDiscuss best practices for coding and reproducible research, basics of data ethics and management, basics of working with special data types, and basics of storing data\nDocument and communicate your findings via reports produced in Quarto/Rmarkdown\nArchive and share your data analysis pipeline and reports via GitHub, and understand the basics of a collaborative coding project"
  },
  {
    "objectID": "syllabus.html#lectures",
    "href": "syllabus.html#lectures",
    "title": "Zool710: Data Science in R for Biologists Syllabus",
    "section": "Lectures",
    "text": "Lectures\nLectures will be in person in Keller 204 from 9-10:15 am on Tuesdays and Thursdays."
  },
  {
    "objectID": "syllabus.html#textbook-and-other-course-material",
    "href": "syllabus.html#textbook-and-other-course-material",
    "title": "Zool710: Data Science in R for Biologists Syllabus",
    "section": "Textbook and Other Course Material",
    "text": "Textbook and Other Course Material\nThere is no required textbook. We will make use of several freely available textbooks and other materials. All course materials will be provided. We will use the R software for data analysis, and git for version control and data sharing, all of which is freely available for download."
  },
  {
    "objectID": "syllabus.html#software",
    "href": "syllabus.html#software",
    "title": "Zool710: Data Science in R for Biologists Syllabus",
    "section": "Software",
    "text": "Software\nPlease install R onto your laptop. You can obtain R from the Comprehensive R Archive Network. There are versions available for Mac, Windows, and Unix/Linux. This software is required for this course.\nIt is important that you have the latest version of R installed. For this course we will be using R version 4.4.2 or higher. You can determine what version of R you have by starting up R and typing into the console R.version.string and hitting the return/enter key. If you do not have the proper version of R installed, go to CRAN and download and install the latest version.\nSome students like to use the Rstudio interface, but this is optional, and in fact discouraged until you have a grasp of the R environment (I will let you know when we are at a good place in the course). The RStudio interactive development environment (IDE) requires that R be installed, and so is an “add-on” to R. You can obtain the RStudio Desktop for free from the RStudio web site. You can determine the version of RStudio by looking at menu item Help &gt; About RStudio. You should be using RStudio version 1.4.1106 or higher."
  },
  {
    "objectID": "syllabus.html#quizzes",
    "href": "syllabus.html#quizzes",
    "title": "Zool710: Data Science in R for Biologists Syllabus",
    "section": "Quizzes",
    "text": "Quizzes\nThere will be weekly (short) quizzes on Laulima in the beginning of the semester. These are intended to be low-stakes to assist you in checking your understanding of R syntax and get you more comfortable with trial-and-error learning."
  },
  {
    "objectID": "syllabus.html#projects",
    "href": "syllabus.html#projects",
    "title": "Zool710: Data Science in R for Biologists Syllabus",
    "section": "Projects",
    "text": "Projects\nThere will be one optional assignment and 4 graded assignments, due every 3–4 weeks. Projects will be submitted electronically via GitHub (more on this later).\nThe projects are basically a scaffold to learn how to build a data analysis pipeline for your own research data. If you donʻt have your own data yet, I encourage students to ask their advisor for a sample dataset, or a published dataset, or another grad studentʻs dataset to practice on. You can also ask me for help to find data, this is not a problem.\nProject 0 is actually optional, but you are encouraged to practice by putting up your own website. Project 1 is data cleaning on a sample dataset, Project 2 produces analyses on the cleaned data from Project 1. Project 3 is applying everything you learned to your own dataset and exploring. You will also do a show-and-tell oral presentation on Project 3 at the end of the semester. Itʻs fun and students learn a lot. Itʻs exciting to see everyone elseʻs stuff and the diversity of projects people do.\nThe project assignments will be due on\n\nProject 0: February 4, 11:59pm (optional and not graded but hopefully useful and fun)\nProject 1: February 27, 11:59pm\nProject 2: March 25, 11:59pm\nProject 3: April 7-May 6 (multiple stages)\n\nCollaboration\nPlease feel free to study together and talk to one another about project assignments. The mutual instruction that students give each other is among the most valuable that can be achieved.\nHowever, it is expected that project assignments will be implemented and written up independently unless otherwise specified. Specifically, please do not share analytic code or output. Please do not collaborate on write-up and interpretation. Please do not access or use solutions from any source before your project assignment is submitted for grading."
  },
  {
    "objectID": "syllabus.html#discussion-forum",
    "href": "syllabus.html#discussion-forum",
    "title": "Zool710: Data Science in R for Biologists Syllabus",
    "section": "Discussion Forum",
    "text": "Discussion Forum\nThe course will make use of DISCORD to ask and answer questions and discuss any of the course materials. Please engage and provide answers as well as questions. The Instructor will monitor DISCORD and answer questions when appropriate."
  },
  {
    "objectID": "syllabus.html#exams",
    "href": "syllabus.html#exams",
    "title": "Zool710: Data Science in R for Biologists Syllabus",
    "section": "Exams",
    "text": "Exams\nThere are no exams in this course."
  },
  {
    "objectID": "syllabus.html#grading",
    "href": "syllabus.html#grading",
    "title": "Zool710: Data Science in R for Biologists Syllabus",
    "section": "Grading",
    "text": "Grading\nGrades in the course will be based on weekly quizzes (10%), participation (20%) and projects (70%). Each of Projects 1–3 counts approximately equally in the final grade. Grades will be posted on Laulima."
  },
  {
    "objectID": "syllabus.html#policy-for-submitted-projects-late",
    "href": "syllabus.html#policy-for-submitted-projects-late",
    "title": "Zool710: Data Science in R for Biologists Syllabus",
    "section": "Policy for submitted projects late",
    "text": "Policy for submitted projects late\nThe policy for late submissions is as follows:\n\nEach student will be given two free “late days” for the rest of the course.\nA late day extends the individual project deadline by 24 hours without penalty.\nThe late days can be applied to just one project (e.g. two late days for Project 2), or they can be split across the two projects (one late day for Project 2 and one late day for Project 3). This is entirely left up to the discretion of the student.\nLate days are intended to give you flexibility: you can use them for any reason no questions asked.\nYou do not get any bonus points for not using your late days, and they are not transferrable.\n\nFor students who exceed their free late days:\n\nI will be deducting 5% for each extra late day. For example, if you have already used all of your late days for the term, we will deduct 5% for the assignment that is &lt;24 hours late, 10% points for the assignment that is 24-48 hours late, and 15% points for the assignment that is 48-72 hours late, etc.\n\nI will not grade assignments that are more than 3 days past the original due date.\n\nRegrading Policy\nIt is very important to me that all assignments are properly graded. If you believe there is an error in your assignment grading, please send an email within 7 days of receiving the grade explaining the issue. No re-grade requests will be accepted orally, and no regrade requests will be accepted more than 7 days after you receive the grade for the assignment."
  },
  {
    "objectID": "syllabus.html#academic-ethics-and-student-conduct-code",
    "href": "syllabus.html#academic-ethics-and-student-conduct-code",
    "title": "Zool710: Data Science in R for Biologists Syllabus",
    "section": "Academic Ethics and Student Conduct Code",
    "text": "Academic Ethics and Student Conduct Code\nThe faculty, staff, and students participating in courses of the School of Life Sciences assume a responsibility to uphold the Universityʻs missions of academic excellence and social responsibility as appropriate for an institute of higher education. Violations of the UH Systemwide Student Conduct Code includes but is not limited to: cheating; plagiarism; providing copies of your work to other students which is submitted as their own; obtaining copies of said work by others; using copies of said work or representing any portion of another person’s work as your own (i.e., plagiarism); misconduct. While we encourage you to discuss strategies for problem solving, and even collaborate by working through the problems/strategies together, giving someone all the answers is cheating. If you are unsure please ask.\nPlagiarism is when you use information or present ideas, whether by paraphrase or direct quote, from a source (be it published or a classmate) without giving proper credit to that source. Cheating in any way will be reported to the attention of UH Office of Judicial Affairs, and result in an F in this course. Students should be familiar with the policies and procedures specified under the Systemwide Student Conduct Code portal."
  },
  {
    "objectID": "syllabus.html#disability-support-service",
    "href": "syllabus.html#disability-support-service",
    "title": "Zool710: Data Science in R for Biologists Syllabus",
    "section": "Disability Support Service",
    "text": "Disability Support Service\nStudents requiring accommodations for disabilities should register with the Kokua program at Student Disability Services. It is the responsibility of the student to register for accommodations. The Kokua office will send me a notification once you are registered, however, they often do not share information regarding the specifics. If the accommodations are not sufficient to ensure your success, please contact me as soon as possible so that we may work together on providing for an effective learning environment."
  },
  {
    "objectID": "syllabus.html#prerequisites",
    "href": "syllabus.html#prerequisites",
    "title": "Zool710: Data Science in R for Biologists Syllabus",
    "section": "Prerequisites",
    "text": "Prerequisites\nThis is an applied quantitative course. I will not discuss the mathematical details of specific data analysis approaches, however some statistical background and being comfortable with quantitative thinking is useful. Previous experience with writing computer programs in general and R in particular is also helpful, but not necessary. If you have no programming experience, expect to spend extra time getting yourself familiar with R, especially at the very beginning (but it will get better). As long as you are willing to invest the time to learn the programming and you do not mind thinking quantitatively, you should be able to do well, independent of your background. In fact you will have the most to gain.\nGetting set up\nYou must install R and RStudio, optional on your computer in order to complete this course. These are two different applications that must be installed separately before they can be used together:\n\nR is the core underlying programming language and computing engine that we will be learning in this course\nRStudio is an interface into R that makes many aspects of using and programming R simpler\n\nBoth R and RStudio are available for Windows, macOS, and most flavors of Unix and Linux. Please download the version that is suitable for your computing setup.\nThroughout the course, we will make use of numerous R add-on packages that must be installed over the Internet. Packages can be installed using the install.packages() function in R. For example, to install the tidyverse package, you can run\n\ninstall.packages(\"tidyverse\")\n\nin the R console.\nHow to Download R for Windows\nGo to https://cran.r-project.org and\n\nClick the link to “Download R for Windows”\nClick on “base”\nClick on “Download R 4.2.2 for Windows”\n\n\n\n\n\n\n\nWarning\n\n\n\nFor all software, please download the latest version.\n\n\nHow to Download R for the Mac\nGoto https://cran.r-project.org and\n\nClick the link to “Download R for (Mac) OS X”.\nClick on “R-4.2.2.pkg” (or the latest version)\nHow to Download RStudio\nGoto https://rstudio.com and\n\nClick on “Products” in the top menu\nThen click on “RStudio” in the drop down menu\nClick on “RStudio Desktop”\nClick the button that says “DOWNLOAD RSTUDIO DESKTOP”\nClick the button under “RStudio Desktop” Free\nUnder the section “All Installers” choose the file that is appropriate for your operating system."
  },
  {
    "objectID": "syllabus.html#general-disclaimers",
    "href": "syllabus.html#general-disclaimers",
    "title": "Zool710: Data Science in R for Biologists Syllabus",
    "section": "General Disclaimers",
    "text": "General Disclaimers\n\nThis syllabus is a general plan, deviations announced to the class by the instructor may be necessary."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "projects.html",
    "href": "projects.html",
    "title": "Projects",
    "section": "",
    "text": "Projects 2,3\n\n\n\n\n\n\nproject 2\n\n\nproject 3\n\n\nprojects\n\n\n\nInformation for Projects 2 and 3\n\n\n\n\n\nFeb 11, 2025\n\n\nMarguerite Butler\n\n\n\n\n\n\n\n\n\n\n\n\nProject 0 (optional)\n\n\n\n\n\n\nproject 0\n\n\nprojects\n\n\n\nInformation for Project 0 (entirely optional, but hopefully useful and fun!)\n\n\n\n\n\nJan 14, 2025\n\n\nMarguerite Butler\n\n\n\n\n\n\n\n\n\n\n\n\nOral Presentation\n\n\n\n\n\n\nproject 3\n\n\nprojects\n\n\n\nInformation for Final Oral Presenatation\n\n\n\n\n\nApr 27, 2023\n\n\nMarguerite Butler\n\n\n\n\n\n\n\n\n\n\n\n\nProject 1\n\n\n\n\n\n\nproject 1\n\n\nprojects\n\n\n\nInformation for Project 1\n\n\n\n\n\nJan 30, 2023\n\n\nMarguerite Butler\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "projects/2025-01-14-project-0/index.html",
    "href": "projects/2025-01-14-project-0/index.html",
    "title": "Project 0 (optional)",
    "section": "",
    "text": "This exercise is modified from material developed by Stephanie Hicks."
  },
  {
    "objectID": "projects/2025-01-14-project-0/index.html#acknowledgements",
    "href": "projects/2025-01-14-project-0/index.html#acknowledgements",
    "title": "Project 0 (optional)",
    "section": "",
    "text": "This exercise is modified from material developed by Stephanie Hicks."
  },
  {
    "objectID": "projects/2025-01-28-project-1/index.html",
    "href": "projects/2025-01-28-project-1/index.html",
    "title": "Project 1",
    "section": "",
    "text": "This exercise is modified from material developed by Andreas Handel."
  },
  {
    "objectID": "projects/2025-01-28-project-1/index.html#acknowledgements",
    "href": "projects/2025-01-28-project-1/index.html#acknowledgements",
    "title": "Project 1",
    "section": "",
    "text": "This exercise is modified from material developed by Andreas Handel."
  },
  {
    "objectID": "posts/2025-01-21-intro-git-github/index.html",
    "href": "posts/2025-01-21-intro-git-github/index.html",
    "title": "Introduction to git/GitHub",
    "section": "",
    "text": "Note 1: Helpful references for this lecture\n\n\n\n\n\nHappy Git with R from Jenny Bryan\n\nChapter on git and GitHub in dsbook from Rafael Irizarry\n\nGitHub introduction in module 1 from Andreas Handel\nEither before or after Tuesday’s class, please watch the podcast GitHub my Computer and me. You can stop at ~11:15:\n\n\n\n\n\nMaterial for this lecture was borrowed and adopted from\n\nhttps://www.stephaniehicks.com/jhustatcomputing2022/\nhttps://andreashandel.github.io/MADAcourse/Tools_Github_Introduction.html"
  },
  {
    "objectID": "posts/2025-01-21-intro-git-github/index.html#acknowledgements",
    "href": "posts/2025-01-21-intro-git-github/index.html#acknowledgements",
    "title": "Introduction to git/GitHub",
    "section": "",
    "text": "Material for this lecture was borrowed and adopted from\n\nhttps://www.stephaniehicks.com/jhustatcomputing2022/\nhttps://andreashandel.github.io/MADAcourse/Tools_Github_Introduction.html"
  },
  {
    "objectID": "posts/2025-01-21-intro-git-github/index.html#git",
    "href": "posts/2025-01-21-intro-git-github/index.html#git",
    "title": "Introduction to git/GitHub",
    "section": "git",
    "text": "git\nGit is software that implements what is called a version control system for a repository of files (also known as a repo). The main idea is that as you (and your collaborators) work on a project, the git software tracks, and records any changes made by anyone.\nGitHub is an online server and user interface that provides powerful tools for distribution of your repository, bug tracking, collaboration, and also allows you to create easy websites for each repository.\nGit and GitHub together provide an organized way to track your projects, and all of the tools you will need in this course are free.\n\n\n\n\nFigure 1. Whether working solo (A) or collaborating in a group (B) version tracking by naming files is a mess when you want to retrace the steps of the analysis (C). Git and GitHub track all changes and the complete branching tree of the project (D). The commit history is a powerful tool to retrace the development of the project or can be used to roll back to any prior version.\n\n\n\n[Source: Jenny Bryan]\nIt is very well suited for collaborative work, as it was developed by Linus Torvalds (in about 10 days of coding!) for collaborative software development of the Linux kernel pretty interesting interview with Torvalds. What it did really well was distributed control, and allowing everyone to have their own copy of the repository.\nGit/GitHub is now the dominant version control system with GitHub hosting over 200 million repositories worldwide! It is used very broadly for all kinds of repos now including data science projects, book projects, courses, and anything that needs collaborative management of mostly text files.\nAnother great and fun read about Git/GitHub and why it is a great tool for data analysis is in this article by Jenny Bryan."
  },
  {
    "objectID": "posts/2025-01-21-intro-git-github/index.html#what-to-not-use-gitgithub-for",
    "href": "posts/2025-01-21-intro-git-github/index.html#what-to-not-use-gitgithub-for",
    "title": "Introduction to git/GitHub",
    "section": "What to (not) use Git/GitHub for",
    "text": "What to (not) use Git/GitHub for\nGitHub is ideal if you have a project with (possibly many) smallish files, and most of those files are text files (such as R code, LaTeX, Quarto/(R)Markdown, etc.) and different people work on different parts of the project.\nGitHub is less useful if you have a lot of non-text files (e.g. Word or PowerPoint) and different team members might want to edit the same document at the same time. In that instance, a solution like Google Docs, Word+Dropbox, Word+Onedrive, etc. might be better.\nGitHub also has a problem with large files. Anything above around 50MB can lead to very slow syncing and sometimes outright failure. Unfortunately, once GitHub has choked on a large file, it can be quite tricky to fix the repository to work again. This is because the ENTIRE history is saved, including the addition of the huge file. Therefore keep large (&gt;50MB) files out of your GitHub repositories. If you have to work with such files, try to reduce them first before placing into the GitHub repository. Or as alternative, place those files in another sync service (e.g. Dropbox, OneDrive, GoogleDrive) and load them from there.\nFinally, if you have data, you need to be careful since by default, GitHub repositories are public. You can set the repository to private, but you need to be careful that you don’t accidentally expose confidential data to the public. It is in general not a good idea to have confidential data on GitHub. First anonymize your data (ensure that it is not at risk of identifiability), then you can place it in a private repository. If you put it in a public repo, be very careful!! (And you may need IRB approval, check with your institutional research office.)\n\n\n\n\n\n\nTip\n\n\n\n\nGit/GitHub has version control features like a turbo-charged version of “track changes” but more rigorous, powerful, and scaled up to multiple files\nGreat for solo or collaborative work\nSaves the entire history of every change made\nAllows for multiple verisions or “branches” to be developed and later merged\nGitHub allows distributed collaboration (potentially among complete strangers) and has greatly promoted open-source software development, collaboration, distribution, and bug/issue tracking for users to get help\nGitHub allows webpages for your projects or repositories\n\n\n\nNote that other interfaces to Git exist, e.g., Bitbucket, but GitHub is the most widely used one."
  },
  {
    "objectID": "posts/2025-01-21-intro-git-github/index.html#why-use-gitgithub",
    "href": "posts/2025-01-21-intro-git-github/index.html#why-use-gitgithub",
    "title": "Introduction to git/GitHub",
    "section": "Why use git/GitHub?",
    "text": "Why use git/GitHub?\nYou want to use GitHub to avoid this:\n\n\n\n\nHow not to use GitHub image from PhD Comics\n\n\n\nTo learn a bit more about Git/GitHub and why you might want to use it, read this article by Jenny Bryan.\nNote her explanation of what’s special with the README.md file on GitHub."
  },
  {
    "objectID": "posts/2025-01-21-intro-git-github/index.html#how-to-use-gitgithub",
    "href": "posts/2025-01-21-intro-git-github/index.html#how-to-use-gitgithub",
    "title": "Introduction to git/GitHub",
    "section": "How to use Git/GitHub",
    "text": "How to use Git/GitHub\nGit/GitHub is fundamentally based on commands you type into the command line. Lots of online resources show you how to use the command line. This is the most powerful, and the way I almost always interact with git/GitHub. However, many folks find this the most confusing way to use git/GitHub. Alternatively, there are graphical interfaces.\n\n\nGitHub itself provides a grapical interface with basic functionality.\nRStudio also has Git/GitHub integration. Of course this only works for R project GitHub integration.\nThere are also third party GitHub clients with many advanced features, most of which you won’t need initially, but might eventually.\n\nNote: As student, you can (and should) upgrade to the Pro version of GitHub for free (i.e. access to unlimited private repositories is one benefit), see the GitHub student developer pack on how to do this."
  },
  {
    "objectID": "posts/2025-01-21-intro-git-github/index.html#sec-profile",
    "href": "posts/2025-01-21-intro-git-github/index.html#sec-profile",
    "title": "Introduction to git/GitHub",
    "section": "Set up your profile in git on your computer",
    "text": "Set up your profile in git on your computer\nBefore making changes to your repository, GitHub will want to verify your identity.\nIn order for your computer to talk to GitHub smoothly, you will need to set up your username and email in the git profile stored on your computer.\n\n\n\n\n\n\nWarning\n\n\n\nBe sure to match your GitHub account username and email! Otherwise GitHub wonʻt know who you are\n\n\n\n\nTerminal\n\ngit config --global user.name 'GitHubUsername'\ngit config --global user.email 'GitHub_email@example.com'\ngit config --global --list\n\nThat last line will show all of your current git config settings.\nIf you are using Rstudio, easy directions are provided here https://happygitwithr.com/hello-git.html"
  },
  {
    "objectID": "posts/2025-01-21-intro-git-github/index.html#sec-token",
    "href": "posts/2025-01-21-intro-git-github/index.html#sec-token",
    "title": "Introduction to git/GitHub",
    "section": "Set up your Personal Authentication Token on your computer",
    "text": "Set up your Personal Authentication Token on your computer\nGitHub will also want to check your credentials to authenticate you are really you before writing changes to your repo.\nThere are several ways to do this, but the easiest is the protocol for HTTP authentication. You will generate a Personal Access Token for HTTPS from your GitHub account which will be stored on your personal machine.\nI prefer the GithHub command line interface or gh to do this. To install the CLI, follow the instructions here for your operating system. For Mac users, I suggest that you install homebrew, it is a command-line general software manager for many different software packages.\n\n\n\n\n\n\nStoring your Personal Access Token\n\n\n\n\nFrom GitHub: Generate your personal access token instructions\n\nFind the token generator on GitHub under your User Icon &gt; settings &gt; developer settings (left side bar) &gt; Personal access tokens &gt; Tokens (classic) &gt; Generate new Token &gt; classic note this menu may change\n\nSelect at least these scopes: “admin:org”,“repo”, “user”, “gist”, and “workflow”\n\n\nFrom your Command Line: Use gh auth login to store your token and follow the prompts.\n\nselect HTTPS for your preferred protocol\nselect Y for authenticate with GitHub credentials\nAlternatively if you want to do this all from the command line you can run the following line (if your token is saved in mytoken.txt):\n\n\n\nTerminal\n\ngh auth login --with-token &lt; mytoken.txt\n\n\n\n\n\nMany more details are explained nicely here https://happygitwithr.com/https-pat.html\nYou only have to store your credentials once for each computer (or PAT expiration date), then you can push and pull from GitHub to your heartʻs content. It really is a nice way to do things securely."
  },
  {
    "objectID": "posts/2025-01-21-intro-git-github/index.html#configuring-your-default-git-editor",
    "href": "posts/2025-01-21-intro-git-github/index.html#configuring-your-default-git-editor",
    "title": "Introduction to git/GitHub",
    "section": "Configuring your default git editor",
    "text": "Configuring your default git editor\nYou may want to set your default git editor to something you know how to use (it will come up when you have a merge conflict).\nFor example the nano editor is easy to use on the command line for a Unix shell:\n\n\nMac/Linux\n\n$ git config --global core.editor \"nano -w\"\n\nThe Carpentries provide a full list of editors by operating system, a great resource."
  },
  {
    "objectID": "posts/2025-01-23-reproducible-research/index.html",
    "href": "posts/2025-01-23-reproducible-research/index.html",
    "title": "Reproducible Research",
    "section": "",
    "text": "The shocking assertion will be that most statistics in most scientific papers has errors. —Charles Geyer\n\nPre-lecture materials\nRead ahead\n\n\n\n\n\n\nRead ahead\n\n\n\nBefore class, you can prepare by reading the following materials:\n\n\nStatistical programming, Small mistakes, big impacts by Simon Schwab and Leonhard Held\n\nReproducibility and Error by Charles J. Geyer\n\n\n\nAcknowledgements\nMaterial for this lecture was borrowed and adopted from\n\nhttp://users.stat.umn.edu/~geyer/Sweave/\nhttp://users.stat.umn.edu/~geyer/repro.pdf\nhttps://rdpeng.github.io/Biostat776\n\nReproducible Research: A Retrospective by Roger Peng and Stephanie Hicks\nLearning objectives\n\n\n\n\n\n\nLearning objectives\n\n\n\nAt the end of this lesson you will:\n\nKnow the difference between replication and reproducibility\nIdentify valid reasons why replication and/or reproducibility is not always possible\nIdentify the type of reproducibility\nIdentify key components to enable reproducible data analyses\n\n\n\nIntroduction\nFrom a young age, we have learned that scientific conclusions should be reproducible. After all, isnʻt that what the methods section is for? We are taught to write methods sections so that any scientist could, in theory, repeat the experiment with the idea that if the phenomenon is true, they should obtain comparable results and more often than not should come to the same conclusions.\nBut how repeatable is modern science? Many experiments are now so complex and so expensive that repeating them is not practical. However, it is even worse than that. As datasets get larger and analyses become ever more complex, there is a growing concern that even given the data, we still cannot necessarily repeat the analysis. This is called “the reproducbility crisis”.\nRecently, there has been a lot of discussion of reproducibility in the media and in the scientific literature. The journal Science had a special issue on reproducibility and data replication.\n\nhttps://www.science.org/toc/science/334/6060\n\nTake for example a recent study by the Crowdsourced Replication Initiative (2022). It was a massive effort by 166 coauthors published in PNAS to test repeatability:\n\n73 research teams from around the world analyzed the same social science data.\nThey investigated the same hypothesis: that more immigration will reduce public support for government provision of social policies.\nTogether they fit 1261 statistical models and came to widely varying concluisons.\nA meta-analysis of the results by the PIs could not explain the variation in results. Even after accounting for the choices made by the research teams in designing their statistical tests, 95% of the total variation remained unexplained.\nThe authors claim that “a hidden universe of uncertainty remains.”\n\n\n\n\n\n\n\n\n\nSource: Breznau et al., 2022\nThis should be very disturbing. It was very disturbing to me! Greyer notes that the meta-analysis did not investigate how much of the variability of results was due to outright error. He furthermore notes that while the meta-analysis was done in a reproducibly, the original 73 analyses were not. What does he mean?\nSome of the issues from a statisticianʻs perspective\nGreyer provides nine ideas worth considering:\n\nMost scientific papers that need statistics have conclusions that are not actually supported by the statistical calculations done, because of\n\nmathematical or computational error,\nstatistical procedures inappropriate for the data, or\nstatistical procedures that do not lead to the inferences claimed.\n\n\nGood computing practices — version control, well thought out testing, code reviews, literate programming — are essential to correct computing.\nFailure to do all calculations from raw data to conclusions (every number or figure shown in a paper) in a way that is fully reproducible and available in a permanent public repository is, by itself, a questionable research practice.\nFailure to do statistics as if it could have been pre-registered is a questionable research practice.\nJournals that use P &lt; 0.05 as a criterion of publication are not scientific journals (publishing only one side of a story is as unscientific as it is possible to be).\nStatistics should be adequately described, at least in the supplementary material.\nScientific papers whose conclusions depend on nontrivial statistics should have statistical referees, and those referees should be heeded.\nNot all errors are describable by statistics. There is also what physicists call systematic error that is the same in every replication of an experiment. Physicists regularly attempt to quantify this. Others should too.\n\nA reasonable ideal for reproducible research today - Research should be reproducible. Anything in a scientific paper should be reproducible by the reader. - Whatever may have been the case in low tech days, this ideal has long gone. Much scientific research in recent years is too complicated and the published details to scanty for anyone to reproduce it. - The lack of detail is not entirely the author’s fault. Journals have severe page pressure and no room for full explanations. - For many years, the only hope of reproducibility is old-fashioned person-to-person contact. Write the authors, ask for data, code, whatever. Some authors help, some don’t. If the authors are not cooperative, tough. - Even cooperative authors may be unable to help. If too much time has gone by and their archiving was not systematic enough and if their software was unportable, there may be no way to recreate the analysis. - Fortunately, the internet comes to the rescue. No page pressure there! - Nowadays, many scientific papers also point to supplementary materials on the internet. Data, computer programs, whatever should be there, permanently. Ideally with a permanent Document Identifier or DOI. There are complaints that many Supplmentary Materials are incomprehensible, but that can be improved with practices of reproducible reserach.\nTherefore, at the very least scientists should use in their statistical programming - version control, - software testing, - code reviews, - literate programming, and - all data and code available in a permanent public repository.\nSome journals have specific policies to promote reproducibility in manuscripts that are published in their journals. For example, the Journal of American Statistical Association (JASA) requires authors to submit their code and data to reproduce their analyses and a set of Associate Editors of Reproducibility review those materials as part of the review process:\n\nhttps://jasa-acs.github.io/repro-guide\nRecommendations\nDiscuss Table 1\nAuthors and Readers\nIt is important to realize that there are multiple players when you talk about reproducibility–there are different types of parties that have different types of interests. There are authors who produce research and they want to make their research reproducible. There are also readers of research and they want to reproduce that work. Everyone needs tools to make their lives easier.\nOne current challenge is that authors of research have to undergo considerable effort to make their results available to a wide audience.\n\nPublishing data and code today is not necessarily a trivial task. Although there are a number of resources available now, that were not available even five years ago, it is still a bit of a challenge to get things out on the web (or at least distributed widely).\nResources like GitHub, kipoi, and RPubs and various data repositories have made a big difference, but there is still a ways to go with respect to building up the public reproducibility infrastructure.\n\nFurthermore, even when data and code are available, readers often have to download the data, download the code, and then they have to piece everything together, usually by hand. It’s not always an easy task to put the data and code together.\n\nReaders may not have the same computational resources that the original authors did.\nIf the original authors used an enormous computing cluster, for example, to do their analysis, the readers may not have that same enormous computing cluster at their disposal. It may be difficult for readers to reproduce the same results.\n\nGenerally, the toolbox for doing reproducible research is small, although it’s definitely growing.\n\nIn practice, authors often just throw things up on the web. There are journals and supplementary materials, but they are famously disorganized.\nThere are only a few central databases that authors can take advantage of to post their data and make it available. So if you are working in a field that has a central database that everyone uses, that is great. If you are not, then you have to assemble your own resources.\n\n\n\n\n\n\n\nSummary\n\n\n\n\nThe process of conducting and disseminating research can be depicted as a “data science pipeline”\nReaders and consumers of data science research are typically not privy to the details of the data science pipeline\nOne view of reproducibility is that it gives research consumers partial access to the raw pipeline elements.\n\n\n\nPost-lecture materials\nFinal Questions\nHere are some post-lecture questions to help you think about the material discussed.\n\n\n\n\n\n\nQuestions\n\n\n\n\nWhy can replication be difficult to achieve? Why is reproducibility a reasonable minimum standard when replication is not possible?\nWhat is needed to reproduce the results of a data analysis?\n\n\n\nAdditional Resources\n\n\n\n\n\n\nTip\n\n\n\n\n\nReproducible Research: A Retrospective by Roger Peng and Stephanie Hicks"
  },
  {
    "objectID": "posts/2025-01-16-your-computer-filesystems/index.html",
    "href": "posts/2025-01-16-your-computer-filesystems/index.html",
    "title": "Introduction to your computerʻs terminal utilities",
    "section": "",
    "text": "Read ahead\n\n\n\nFor future lectures, Iʻll give you some reading or podcasts to prepare\n\n\n\nMaterial for this lecture was borrowed and adopted from\n\nhttps://academind.com/tutorials/terminal-zsh-basics"
  },
  {
    "objectID": "posts/2025-01-16-your-computer-filesystems/index.html#the-kernel",
    "href": "posts/2025-01-16-your-computer-filesystems/index.html#the-kernel",
    "title": "Introduction to your computerʻs terminal utilities",
    "section": "The kernel",
    "text": "The kernel\nThe kernel is the part of your computerʻs operating system that loads first once you start up. It is kind of like your computerʻs autonomic nervous system. It recognizes all of the physical hardware attached to it, enables communication between components (and device drivers), and monitors maintenance functions like turning on the fan when it gets hot, manages virtual memory, gives warnings when the hard drive gets full, manages multitasking, and manages security and file permissions. In the mac this is the XNU kernel (“X is not UNIX”), in modern Windows machines it is the Windows NT kernel.\n\n\n\n\n\n\n\n\n[Source: Map of MacOS: the heart of everything is called Darwin; and within it, we have separate system utilities (the shell) and the XNU kernel, which is composed in parts by the Mach kernel and by the BSD kernel.]"
  },
  {
    "objectID": "posts/2025-01-16-your-computer-filesystems/index.html#the-shell",
    "href": "posts/2025-01-16-your-computer-filesystems/index.html#the-shell",
    "title": "Introduction to your computerʻs terminal utilities",
    "section": "The shell",
    "text": "The shell\nThe shell is another key part of the core operating system (note in the diagram above it is part of the System Utilities, and the partner of the kernel). The shell is a software (an app) that allows humans to control the computer. You are already familiar with the GUI interface, or the Graphical User Interface. It is important that you are comfortable using the Command Line Interface as well.\n\n\n\n\n\n\nThere are many reasons to be proficient in the shell:\n\n\n\n\nData analysis increasingly uses many files. The shell provides a simple but very powerful means to do all kinds of operations on files: move, delete, organize, combine, rename, etc.\nUsing the shell encourages you to understand your computerʻs filesystem, and helps you to more precisely control input and output to any place along your file paths.\nShell operations are fast.\nYou can use wildcards to control matching or excluding many files.\nThe shell can be used to execute (run) software.\nThe shell is probably the oldest app, so it is very stable with lasting power.\nIt is part of the OS, so when your apps fail or you are having some issues, you would turn to the shell to kill troublesome processes (programs) or diagnose and fix the issues.\n\n\n\nMacs use the same terminal utilities as UNIX/Linux systems. On the Mac, the command line interface app is called Terminal, which you will find in your Application folder, in the Utilities subfolder (here is a screentshot of our GUI Interface).\n\n\n\n\n\n\n\n\nOn a PC if you installed Git For Windows, you can use Git-Bash (a UNIX emulator) and follow the UNIX instructions (this would be my personal preference). Otherwise you use the Command Prompt also known as the Windows Command Processor or CMD. If you used a pre-Windows machine, you would be familiar with MS-DOS. To open CMD:\n\nOpen the Start Menu and type “command prompt” or\nPress Win + R and type “cmd” in the run box or\nPress Win + X and select Command Prompt from the menu.\n\nNote: you may see Windows PowerShell or Windows Terminal instead, these are similar apps."
  },
  {
    "objectID": "posts/2025-01-16-your-computer-filesystems/index.html#the-dots",
    "href": "posts/2025-01-16-your-computer-filesystems/index.html#the-dots",
    "title": "Introduction to your computerʻs terminal utilities",
    "section": "The dots",
    "text": "The dots\n\n“.” is the current working directory (where you are currently)\n“..” is the directory one level up\n“./foldername” will take you to the folder one level down, for example “./Data”\n\nYou can use these paths to change directories using cd or to list ls the contents of the directories or to make new directories using mkdir\nls .\nls ./Data\nmkdir ./Data/A\nMake multiple directories:\nmkdir ./Data/B ./Data/C\nList the files one level up or two levels up:\nls ..  # for PC use dir ..\nls ../..\nUp one level, and over to another directory:\nls ../AnotherDirectory\nYou can wander anywhere along your computerʻs file directory! Just add more steps to the path."
  },
  {
    "objectID": "posts/2025-01-28-intro-quarto/index.html",
    "href": "posts/2025-01-28-intro-quarto/index.html",
    "title": "Literate Statistical Programming and Quarto",
    "section": "",
    "text": "Read ahead\n\n\n\nBefore class, you can prepare by reading the following materials:\n\nhttps://rss.onlinelibrary.wiley.com/doi/epdf/10.1111/1740-9713.01522\nCreating a Website in Quarto quickstart up to and including Render https://quarto.org/docs/websites/\n\nPublishing to GitHub up to and including Render to docs https://quarto.org/docs/publishing/github-pages.html\n\n\n\n\n\nMaterial for this lecture was borrowed and adopted from\n\nhttps://www.stephaniehicks.com/jhustatcomputing2022/posts/2022-09-01-literate-programming/\nhttp://users.stat.umn.edu/~geyer/Sweave/\nhttps://rdpeng.github.io/Biostat776/lecture-literate-statistical-programming.html\nhttps://statsandr.com/blog/tips-and-tricks-in-rstudio-and-r-markdown"
  },
  {
    "objectID": "posts/2025-01-28-intro-quarto/index.html#read-ahead",
    "href": "posts/2025-01-28-intro-quarto/index.html#read-ahead",
    "title": "Literate Statistical Programming and Quarto",
    "section": "",
    "text": "Read ahead\n\n\n\nBefore class, you can prepare by reading the following materials:\n\nhttps://rss.onlinelibrary.wiley.com/doi/epdf/10.1111/1740-9713.01522\nCreating a Website in Quarto quickstart up to and including Render https://quarto.org/docs/websites/\n\nPublishing to GitHub up to and including Render to docs https://quarto.org/docs/publishing/github-pages.html"
  },
  {
    "objectID": "posts/2025-01-28-intro-quarto/index.html#acknowledgements",
    "href": "posts/2025-01-28-intro-quarto/index.html#acknowledgements",
    "title": "Literate Statistical Programming and Quarto",
    "section": "",
    "text": "Material for this lecture was borrowed and adopted from\n\nhttps://www.stephaniehicks.com/jhustatcomputing2022/posts/2022-09-01-literate-programming/\nhttp://users.stat.umn.edu/~geyer/Sweave/\nhttps://rdpeng.github.io/Biostat776/lecture-literate-statistical-programming.html\nhttps://statsandr.com/blog/tips-and-tricks-in-rstudio-and-r-markdown"
  },
  {
    "objectID": "posts/2025-01-28-intro-quarto/index.html#weaving-and-tangling",
    "href": "posts/2025-01-28-intro-quarto/index.html#weaving-and-tangling",
    "title": "Literate Statistical Programming and Quarto",
    "section": "Weaving and Tangling",
    "text": "Weaving and Tangling\nLiterate programs by themselves are a bit difficult to work with, but they can be processed in two important ways.\nLiterate programs can be weaved to produce human readable documents like PDFs or HTML web pages, and they can tangled to produce machine-readable “documents”, or in other words, machine readable code.\nIn order to use a system like this you need a documentational language, that’s human readable, and you need a programming language that’s machine readable (or can be compiled/interpreted into something that’s machine readable)."
  },
  {
    "objectID": "posts/2025-01-28-intro-quarto/index.html#sweave",
    "href": "posts/2025-01-28-intro-quarto/index.html#sweave",
    "title": "Literate Statistical Programming and Quarto",
    "section": "Sweave",
    "text": "Sweave\nOne of the original literate programming systems in R that was designed to do this was called Sweave written by Friedrich Leisch. Sweave enables users to combine R code with a documentation program called LaTeX. Sweave revolutionized coding, and has become part of the R base code. Leisch is on the R Core Development Team and the BioConductor Project.\nSweave files ends a .Rnw and have R code weaved through the document:\n&lt;&lt;plot1, height=4, width=5, eval=FALSE&gt;&gt;=\ndata(airquality)\nplot(airquality$Ozone ~ airquality$Wind)\n@\nOnce you have created your .Rnw file, Sweave will process the file, executing the R chunks and replacing them with output as appropriate before creating the PDF document.\nSweaveʻs main limitation is that it requires knowledge of LaTeX\n\nLaTeX is very powerful for laying out mathematical equations and fine-tuned control of formatting, but is not a documentation language that is widely used outside of mathematics.\nTherefore, there is a steep learning curve.\nSweave also lacks a lot of features that people find useful like caching, and multiple plots per page and mixing programming languages.\n\nInstead, folks have moved towards using something called knitr, which offers everything Sweave does, plus it extends it to much simpler Markdown documents."
  },
  {
    "objectID": "posts/2025-01-28-intro-quarto/index.html#rmarkdown",
    "href": "posts/2025-01-28-intro-quarto/index.html#rmarkdown",
    "title": "Literate Statistical Programming and Quarto",
    "section": "rmarkdown",
    "text": "rmarkdown\nAnother choice for literate programming is to build documents based on Markdown language. A markdown file is a plain text file that is typically given the extension .md. The rmarkdown R package takes a R Markdown file (.Rmd) and weaves together R code chunks Figure 1, producing a large number of user-specified outputs.\n\n\n\n\n\nFigure 1: R markdown translates text and code to many different formats\n\n\nR chunks surrounded by text looks like this:\n```{r plot1, height=4, width=5, eval=FALSE, echo=TRUE}\ndata(airquality)\nplot(airquality$Ozone ~ airquality$Wind)\n```\n\n\n\n\n\n\nTip\n\n\n\nThe best resource for learning about R Markdown this by Yihui Xie, J. J. Allaire, and Garrett Grolemund:\n\nhttps://bookdown.org/yihui/rmarkdown\n\nThe R Markdown Cookbook by Yihui Xie, Christophe Dervieux, and Emily Riederer is really good too:\n\nhttps://bookdown.org/yihui/rmarkdown-cookbook\n\nThe authors of the 2nd book describe the motivation for the 2nd book as:\n\n“However, we have received comments from our readers and publisher that it would be beneficial to provide more practical and relatively short examples to show the interesting and useful usage of R Markdown, because it can be daunting to find out how to achieve a certain task from the aforementioned reference book (put another way, that book is too dry to read). As a result, this cookbook was born.”\n\n\n\nBecause this is lecture is built in a .qmd file (which is very similar to a .Rmd file), let’s demonstrate how this work. I am going to change eval=FALSE to eval=TRUE.\n\ndata(airquality)\nplot(airquality$Ozone ~ airquality$Wind)\n\n\n\n\n\n\n\n\n\n\n\n\n\nQuestions\n\n\n\n\nWhy do we not see the back ticks ``` anymore in the code chunk above that made the plot?\nWhat do you think we should do if we want to have the code executed, but we want to hide the code that made it?\n\n\n\nBefore we leave this section, I find that there is quite a bit of terminology to understand the magic behind rmarkdown that can be confusing, so let’s break it down:\n\n\nPandoc. Pandoc is a command line tool with no GUI that converts documents (e.g. from number of different markup formats to many other formats, such as .doc, .pdf etc). It is completely independent from R (but does come bundled with RStudio). If you donʻt have Rstudio installed, you will have to install pandoc.\n\nMarkdown (markup language). Markdown is a lightweight markup language with plain text formatting syntax designed so that it can be converted to HTML and many other formats. A markdown file is a plain text file that is typically given the extension .md. It is completely independent from R.\nR Markdown (markup language). R Markdown is an extension of the markdown syntax for weaving together text with R code. R Markdown files are plain text files that typically have the file extension .Rmd.\n\nrmarkdown (R package). The R package rmarkdown is a library that uses pandoc to process and convert text and R code written in .Rmd files into a number of different formats. This core function is rmarkdown::render(). Note: this package only deals with the markdown language. If the input file is e.g. .Rhtml or .Rnw, then you need to use knitr prior to calling pandoc (see below).\n\n\n\n\n\n\n\nTip\n\n\n\nCheck out the R Markdown Quick Tour for more:\n\nhttps://rmarkdown.rstudio.com/authoring_quick_tour.html\n\n\n\n\n\nArtwork by Allison Horst on RMarkdown\n\nknitr\nOne of the alternative that has come up in recent times is something called knitr.\n\nThe knitr package for R takes a lot of these ideas of literate programming and updates and improves upon them.\n\nknitr still uses R as its programming language, but it allows you to mix other programming languages in.\nYou can also use a variety of documentation languages now, such as LaTeX, markdown and HTML.\n\nknitr was developed by Yihui Xie while he was a graduate student at Iowa State and it has become a very popular package for writing literate statistical programs.\n\nKnitr takes a plain text document with embedded code, executes the code and ‘knits’ the results back into the document.\nFor for example, it converts\n\nAn R Markdown (.Rmd) file into a standard markdown file (.md)\nAn .Rnw (Sweave) file into to .tex format.\nAn .Rhtml file into to .html.\n\nThe core function is knitr::knit() and by default this will look at the input document and try and guess what type it is e.g. Rnw, Rmd etc.\nThis core function performs three roles:\n\nA source parser, which looks at the input document and detects which parts are code that the user wants to be evaluated.\nA code evaluator, which evaluates this code\nAn output renderer, which writes the results of evaluation back to the document in a format which is interpretable by the raw output type. For instance, if the input file is an .Rmd, the output render marks up the output of code evaluation in .md format.\n\n\n\n\n\nConverting a Rmd file to many outputs using knitr and pandoc\n\n\n\n[Source]\nAs seen in the figure above, from there pandoc is used to convert e.g. a .md file into many other types of file formats into a .html, etc.\nSo in summary:\n\n“R Markdown stands on the shoulders of knitr and Pandoc. The former executes the computer code embedded in Markdown, and converts R Markdown to Markdown. The latter renders Markdown to the output format you want (such as PDF, HTML, Word, and so on).”\n\n[Source]"
  },
  {
    "objectID": "posts/2025-01-28-intro-quarto/index.html#create-your-website-locally-with-quarto",
    "href": "posts/2025-01-28-intro-quarto/index.html#create-your-website-locally-with-quarto",
    "title": "Literate Statistical Programming and Quarto",
    "section": "Create your website locally with Quarto",
    "text": "Create your website locally with Quarto\nIn this section, I am adding a bit more explanation to the Quarto quickstart guide up to and including Render. If something is not clear, please consult https://quarto.org/docs/websites/\nThere are three main quarto commands we will use:\n\n\nquarto create-project: Make a website project template\n\nquarto preview: Take a look at what the webite will look like\n\nquarto render: Render your qmd to html\n\n\nMake your website directory and template\nCreate your website (here called mysite) using the following command. It will make a directory of the same name and put the website contents within it.\n\n\nTerminal\n\nquarto create-project mysite --type website\n\nYou should now see the following files in your mysite directory (Figure 2):\n\n\n\n\n\nFigure 2: Website files from the Terminal view\n\n\nThis is the bare-bones version of your website. Check that the code is functional by looking at a preview:\n\n\nTerminal\n\nquarto preview\n\nThis should open up a browser window showing a temporary file made by quarto by rendering your website files.\n\n\n\n\n\n\nTip\n\n\n\n\n\nquarto preview will refresh the preview every time you save your index.qmd (or any) website files. So itʻs a good idea to keep the preview open as you make edits and saves.\nCheck every edit, it is easier to debug in small steps.\nTerminate quarto preview with Control-c\n\n\n\n\nRender your website to html\nUse quarto to render your content to html, the format used by browsers. First navigate into your website directory then render:\n\n\nTerminal\n\ncd mysite\nquarto render\n\nTake a look at the mysite contents after rendering, you should see a new directory _site (Figure 3). The html was rendered and put in there (go ahead, open up the files and check it out):\n\n\n\n\n\nFigure 3: Website files after rendering\n\n\nPersonalize your content\nWhat is really nice is that you can personalize your website by simply editing the quarto markdown and yaml files.\nWeb content goes in .qmd\n\nUsing any text editor, edit the index.qmd to personalize your website.\nThe first section of your index.qmd is the header. You can change the title and add additional header information, including any cover images and website templates.\nFor example this is what I have in my course website index.qmd header. Note that my cover image is in a folder called images within at the top level of my website directory. If you want to try this out substitute or remove the image line and change the twitter/github handles.\n\n\nindex.qmd\n\n---\ntitle: \"Welcome to Introduction to Data Science in R for Biologists!\"\nimage: images/mycoolimage.png\nabout:\n  template: jolla\n  links:\n    - icon: twitter\n      text: Twitter\n      href: https://twitter.com/mbutler808\n    - icon: github\n      text: Github\n      href: https://github.com/mbutler808\n---\n\nYou should edit the body of your website as well. You simply edit the text.\nThe quarto markdown page has great examples showing how to format your content. Take a look at how to specify header sizes, lists, figures and tables.\nTry editing the about.qmd file as well. You will notice that this is another tab in your website. YOu can add more tabs by adding .qmd files.\nWith each addition, be sure to quarto preview your changes to make sure it works. When you are satisfied with your website, quarto render to render to html.\n\n\n\n\n\n\nTip\n\n\n\n\nWhen editing markdown, take care to note spaces and indents as they are interpreted for formatting.\nIndentations are really important for formatting lists.\nFor example in a hyperlink, there is no space between the square brackets and parentheses. [This is a cool link](http://mycoollink.com)\n\n\n\n\nWebsite-wide settings go in _quarto.yml\n\nAll Quarto projects include a _quarto.yml configuration file that sets the global options that apply across the entire website.\nYAML started off as “Yet Another Markup Language” 😜. It is clean, clear, and widely used. You can edit your YAML to add options or change the format of your website. Take a look at your _quarto.yml.\nHere is an example for a simple website. title: is the parameter to set the websiteʻs title. navbar: sets the menu, in this case on the left sidebar. By default tabs will be named based on the names of the .qmd files, but you can set them manually. There are many themes you can choose from too, check them out. For something different try cyborg.\n\n\n_quarto.yml\n\nproject:\n  type: website\n\nwebsite:\n  title: \"today\"\n  navbar:\n    left:\n      - href: index.qmd\n        text: Home\n      - about.qmd\n\nformat:\n  html:\n    theme: minty\n    css: styles.css\n    toc: true\n\nAgain, after saving your edits, quarto preview to see the effects. When you are satisfied with your website, quarto render to render to html.\n\n\nTerminal\n\nquarto render"
  },
  {
    "objectID": "posts/2025-01-28-intro-quarto/index.html#publishing-your-website-to-github",
    "href": "posts/2025-01-28-intro-quarto/index.html#publishing-your-website-to-github",
    "title": "Literate Statistical Programming and Quarto",
    "section": "Publishing your website to GitHub",
    "text": "Publishing your website to GitHub\nYou can publish your website for free on GitHub, which is a very cool feature. In his section I am adding a bit more explanation to the Quarto quickstart guide up to and including Render to docs https://quarto.org/docs/publishing/github-pages.html. I describe the most important stpes below:\n\nRender your html to a docs directory\nSupress GitHub jekyll html processing by creating a .nojekyll file\nMake your website directory into a repo, and link it to a GitHub repo\nEdit the GitHub repo settings to publish your website\n\nRender your html to docs\n\nEdit the _quarto.yml file at the top level of your website to send output to docs. This will also create the docs folder.\n\n\n_quarto.yml\n\nproject:\n  type: website\n  output-dir: docs\n\nThe next time you quarto render it will create docs and all of its contents.\nSupress GitHub jekyll html processing\nGitHub uses a sofware called jekyll to render html from markdown. Since weʻre using quarto, we want to supress that. Create an empty file named .nojekyll at the top level of your website directory to supress default jekyll processing.\n\n\n\n\n\n\n\nMac/Linux/ Git-bash\n\n\nTerminal\n\ntouch .nojekyll\n\n\n\nWindows\n\n\nCMD\n\ncopy NUL .nojekyll\n\n\n\nSetup a GitHub repo for your website\n\nTurn your website directory into a git repo:\n\n\n\nTerminal\n\ngit init\ngit add .\ngit commit -m \"first commit\"\n\n\nCreate a GitHub repo by the same name\n\nFor example, mine might be github.com/mbutler808/mysite.\n\nLink your local repo and GitHub repo together\n\nIf you forgot how to do this, go back here\n\nCheck your GitHub repo. Are your files there?\nGitHub settings to serve your webpage\nAlmost there! A couple more steps.\nFrom your GitHub repo, click on Settings in the top menu, and Pages on the left menu.\nYour website should deploy from branch. Under Select branch choose main and under Select folder choose docs.\nAfter clicking save GitHub will trigger a deployment of your website. After a few minutes, your URL will appear near the top at Your site is live at...:\n\nCongratulations! ⚡️ Your website is now live 🎉🎊😍"
  },
  {
    "objectID": "posts/2025-01-28-intro-quarto/index.html#now-make-more-changes",
    "href": "posts/2025-01-28-intro-quarto/index.html#now-make-more-changes",
    "title": "Literate Statistical Programming and Quarto",
    "section": "Now make more changes!",
    "text": "Now make more changes!\n\n\n\n\n\n\nThe Quarto Workflow is\n\n\n\n\nEdit the content in .qmd\nFrom the Command line:\n\n\nquarto preview to check that edits are correct\n\nquarto render to render .qmd to .html\n\ngit add .\ngit commit -m \"message\"\ngit push origin main\n\n\nCheck your website (this may take a beat)"
  },
  {
    "objectID": "posts/2025-01-28-intro-quarto/index.html#for-fun",
    "href": "posts/2025-01-28-intro-quarto/index.html#for-fun",
    "title": "Literate Statistical Programming and Quarto",
    "section": "For fun",
    "text": "For fun\nYou can have fun with emoji! Guangchuang Yu wrote the package emojifont (this is the same person who wrote the widely used ggtree package) and now you can bring your emoji out of your phone and into your quarto documents! Install the R package emojifont:\n\ninstall.packages(\"emojifont\")\n\nThen anywhere you want an emoji in the markdown file, you just type:\n\n`r emojifont::emoji('palm_tree')`\n\n🌴\nOr if you want several, just line them up:\n\n`r emojifont::emoji('balloon')``r emojifont::emoji('tada')``r emojifont::emoji('smiley')`\n\n🎈🎉😃\nThere is a handy cheat sheet of emoji names here https://gist.github.com/rxaviers/7360908"
  },
  {
    "objectID": "posts/2025-01-28-intro-quarto/index.html#final-tips",
    "href": "posts/2025-01-28-intro-quarto/index.html#final-tips",
    "title": "Literate Statistical Programming and Quarto",
    "section": "Final tips",
    "text": "Final tips\n\n\n\n\n\n\nTip\n\n\n\n\n\nAlways always quarto render before you push up your changes to GitHub!\nIf your changes are not appearing, try quarto preview and check that your changes appear in the preview. Then quarto render before you use git to add, commit, and push\nNote: It can take a few minutes to render on GitHub before your changes appear on your website\n\n\n\nPlease see Stephanie Hicksʻ lecture for more literate programming examples and tips."
  },
  {
    "objectID": "posts/2025-01-14-the-big-picture/index.html#the-modern-computationally-literate-scientist",
    "href": "posts/2025-01-14-the-big-picture/index.html#the-modern-computationally-literate-scientist",
    "title": "Introduction and The Big Idea",
    "section": "The Modern Computationally-Literate Scientist",
    "text": "The Modern Computationally-Literate Scientist\n\n\nUses computational tools to test ideas\nHas Computing Skills to:\n\nHandle any kind of data\nImplement any kind of test\nProduce graphics for exploration and communication\nTest and validate code (how do we know its right?)\nInteract with other computing systems and the Cloud\nCan archive and disseminate data and workflow\nProduce reproducible results!"
  },
  {
    "objectID": "posts/2025-01-14-the-big-picture/index.html#data-science-workflow",
    "href": "posts/2025-01-14-the-big-picture/index.html#data-science-workflow",
    "title": "Introduction and The Big Idea",
    "section": "Data Science Workflow",
    "text": "Data Science Workflow\nFrom R for Data Science 2e by Hadley Wickam, Garrett Grolemund, and Mine Çetinkaya-Rundel\n\n\n\nQuestion Development\nExploration and Testing\nCommunication"
  },
  {
    "objectID": "posts/2025-01-14-the-big-picture/index.html#our-work-is-interdisciplinary",
    "href": "posts/2025-01-14-the-big-picture/index.html#our-work-is-interdisciplinary",
    "title": "Introduction and The Big Idea",
    "section": "Our Work is Interdisciplinary",
    "text": "Our Work is Interdisciplinary\n\n\nDisciplinary Knowledge (Biology) -&gt; Question Development\nStatistics -&gt; Exploration and Testing\nComputer Science -&gt; Repeatable, Scalable, Reusable\n\nCode MUST be FREE OF ERROR\nClean and Well documented (understandable)\nModular - enhances creativity and scalability"
  },
  {
    "objectID": "posts/2025-01-14-the-big-picture/index.html#classwork-to-professional-science",
    "href": "posts/2025-01-14-the-big-picture/index.html#classwork-to-professional-science",
    "title": "Introduction and The Big Idea",
    "section": "Classwork to Professional Science",
    "text": "Classwork to Professional Science\nThere is a difference between one-time “getting it to work” vs. professional science (publication)\n\n\nThe “answer” must be correct - code validation\nMust be repeatable\nWorkflow must be complete, well organized, documented\nData and code shared on a public repository with a DOI\n\ne.g., GitHub and Zotero (free options!)\nor Dryad ($150 per dataset)"
  },
  {
    "objectID": "posts/2025-01-14-the-big-picture/index.html#how-the-tools-fit-together",
    "href": "posts/2025-01-14-the-big-picture/index.html#how-the-tools-fit-together",
    "title": "Introduction and The Big Idea",
    "section": "How the Tools Fit Together",
    "text": "How the Tools Fit Together\n\n\n\n\n\nNeed\nTools\n\n\n\n\nObserve -&gt; Record Data -&gt; Data Table\nNotebooks\n\n\nCode -&gt; Document -&gt; Comment (annotate)\nR\n\n\nOrganize Project -&gt; Version Control -&gt; Share\nGit/GitHub\n\n\nCommunicate\nQuarto/Rmarkdown"
  },
  {
    "objectID": "posts/2025-01-14-the-big-picture/index.html#open-source-tools-you-will-learn-in-this-course",
    "href": "posts/2025-01-14-the-big-picture/index.html#open-source-tools-you-will-learn-in-this-course",
    "title": "Introduction and The Big Idea",
    "section": "Open Source Tools you will learn in this course",
    "text": "Open Source Tools you will learn in this course\n\n\nR [watch short podcast, up to 4:00]\nCommand Line (UNIX/ Windows/ File Commands in your operating system)\n\nUnderstand your computer’s organization and filepaths\nMore precisely control your files and information\nInstall some command-line software\n\nGit/GitHub [course repo]\nQuarto/Rmarkdown [scientific and technical publishing system]\nand many more…"
  },
  {
    "objectID": "posts/2025-01-14-the-big-picture/index.html#how-to-succeed",
    "href": "posts/2025-01-14-the-big-picture/index.html#how-to-succeed",
    "title": "Introduction and The Big Idea",
    "section": "How to Succeed",
    "text": "How to Succeed\n\n\nPractice\nMake errors – figure out how to fix them\nFearlessly ask questions\nTrial and Error is critical to learning\nValidate – check that the answer is right\nWhen you are developing a script, go back and clean it up!\nSave the correct, good code, throw out the mistakes\nDocument so that you can understand it 1 year from now"
  },
  {
    "objectID": "posts/2025-01-14-the-big-picture/index.html#course-topics",
    "href": "posts/2025-01-14-the-big-picture/index.html#course-topics",
    "title": "Introduction and The Big Idea",
    "section": "Course Topics",
    "text": "Course Topics\n\n\nYour Computer\n\nWhere information is stored - FILEPATHS\nYour OS (Operating System)\n\nGit/GitHub\nR\nMaking them talk to each other\nCoding Fundamentals\nTour of Univariate + Multivariate Statistics\nGraphics\nSpecial Topics - Tell me your interests! [Google Form]"
  },
  {
    "objectID": "posts/2025-01-14-the-big-picture/index.html#software",
    "href": "posts/2025-01-14-the-big-picture/index.html#software",
    "title": "Introduction and The Big Idea",
    "section": "Software",
    "text": "Software\n\nDo you have R installed and working? (R studio is optional)\nFor a longer walk-through here is another resource: Introduction to R/Rstudio\nGit/GitHub: Please Install for next time. Letʻs follow Introduction to Git/GitHub"
  },
  {
    "objectID": "posts/2025-01-14-the-big-picture/index.html#learning-r---a-first-session",
    "href": "posts/2025-01-14-the-big-picture/index.html#learning-r---a-first-session",
    "title": "Introduction and The Big Idea",
    "section": "Learning R - A first session",
    "text": "Learning R - A first session\n\n\nThink about how R works as you try out commands\n“Mistakes” are opportunities to learn how R works!\nLearning Language involves a lot of trial and error\nDon’t be afraid to try - poke it - it won’t break!\nhttps://www.r-project.org Go to manuals, click on An Introduction to R\nFollow Section 2.1\ninput -&gt; R -&gt; output\nWhat came out? What does it tell you about the rules R follows?\nComputers only do Exactly what you tell them to do\nJump to Appendix A - letʻs try to understand some rules of R together"
  },
  {
    "objectID": "projects/2023-03-22-oral-presentation/index.html",
    "href": "projects/2023-03-22-oral-presentation/index.html",
    "title": "Oral Presentation",
    "section": "",
    "text": "Oral Presentation\nOn the last day of class, we will have oral presentations.\nThey will be informal talks on your final projects. I want you to cover the following in about 10 minutes:\n\nBrief introduction to the disciplinary (biological, etc.) problem + More introduction to the data science (cleaning+analysis) problem.\n\nBriefly but Clearly describe your data, and itʻs structure\nWhat are you starting with? What are you aiming to get to?\n\nMethods - how did you do what you needed to do? Be sure to mention any new packages or tricky code you had to figure out. These often identify data manipulation steps that turn out to be critical.\nResults - what do the data show? What else did you find out?\nConclusions - what does it mean? What potential do you see here? If itʻs not finished, speculate on what you might be able to infer or what questions it might answer?\nWhat did you learn? What was most interesting, confusing, fun to figure out? Whatever you want to say\n\nSlides are optional, but can be helpful if you need a prompt to remember what to say. Or you can talk us through your writeup like I do in class, whatever is more comfortable for you. Do show us key elements like your repo, and how to access it, etc."
  },
  {
    "objectID": "projects/2023-03-22-project-2-3/index.html",
    "href": "projects/2023-03-22-project-2-3/index.html",
    "title": "Projects 2,3",
    "section": "",
    "text": "This exercise is modified from material developed by Andreas Handel."
  },
  {
    "objectID": "projects/2023-03-22-project-2-3/index.html#acknowledgements",
    "href": "projects/2023-03-22-project-2-3/index.html#acknowledgements",
    "title": "Projects 2,3",
    "section": "",
    "text": "This exercise is modified from material developed by Andreas Handel."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Introduction to Data Science in R for Biologists 2025",
    "section": "",
    "text": "Welcome to Data Science for Biologists at the University of Hawaiʻi!"
  },
  {
    "objectID": "index.html#what-is-this-course",
    "href": "index.html#what-is-this-course",
    "title": "Introduction to Data Science in R for Biologists 2025",
    "section": "What is this course?",
    "text": "What is this course?\nThis course covers the basics of computational and programming skills required for research in biological sciences and related disciplines. We will cover practical issues in data organization and management as well as programming in R and the tidyverse. Some of the topics will include: data ethics, best practices for coding and reproducible research, introduction to data visualizations, best practices for working with special data types (dates/times, text data, etc), best practices for storing data, basics of debugging, organizing and commenting code, basics of interacting with other computational resources from R. Topics in statistical data analysis, morphometrics, phylogenetic tree visualization, and other practical examples provide working examples."
  },
  {
    "objectID": "index.html#getting-started",
    "href": "index.html#getting-started",
    "title": "Introduction to Data Science in R for Biologists 2025",
    "section": "Getting started",
    "text": "Getting started\nPlease look over the Syllabus and Schedule under General Information. Lectures are provided under the course materials tab."
  },
  {
    "objectID": "index.html#acknowledgements",
    "href": "index.html#acknowledgements",
    "title": "Introduction to Data Science in R for Biologists 2025",
    "section": "Acknowledgements",
    "text": "Acknowledgements\nThis course was developed and is maintained by Marguerite Butler.\nA big thank you to Stephanie Hicks for generously sharing the beautifully designed quarto template for this course.\nMaterials have been adapted from courses developed by the following individuals (more to come): Stephanie Hicks.\nThe course materials are licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License. Linked and embedded materials are governed by their own licenses. I assume that all external materials used or embedded here are covered under the educational fair use policy. If this is not the case and any material displayed here violates copyright, please let me know and I will remove it."
  },
  {
    "objectID": "index.html#useful-free-r-resources",
    "href": "index.html#useful-free-r-resources",
    "title": "Introduction to Data Science in R for Biologists 2025",
    "section": "Useful (Free) R Resources",
    "text": "Useful (Free) R Resources\nIntro to R (by the R Core Group): https://cran.r-project.org/doc/manuals/r-release/R-intro.html R for Data Science: http://r4ds.had.co.nz/ Intro to Data Science: http://rafalab.dfci.harvard.edu/dsbook/ Various “Cheat Sheets”: https://www.rstudio.com/resources/cheatsheets/ DataCamp: http://www.datacamp.com R reference card: http://cran.r-project.org/doc/contrib/Short-refcard.pdfUCLA R Data Import/Export (by the R Core Group): https://cran.r-project.org/doc/manuals/r-release/R-data.html"
  },
  {
    "objectID": "lectures.html",
    "href": "lectures.html",
    "title": "Lectures",
    "section": "",
    "text": "Reproducible Research\n\n\n\n\n\n\nmodule 1\n\n\nweek 2\n\n\nR\n\n\nreproducibility\n\n\n\nIntroduction to reproducible research\n\n\n\n\n\nJan 23, 2025\n\n\nMarguerite Butler\n\n\n\n\n\n\n\n\n\n\n\n\nLiterate Statistical Programming and Quarto\n\n\n\n\n\n\nmodule 1\n\n\nweek 2\n\n\nMarkdown\n\n\nQuarto\n\n\nprogramming\n\n\n\nIntroduction to literate statistical programming tools including Quarto Markdown\n\n\n\n\n\nJan 23, 2025\n\n\nMarguerite Butler\n\n\n\n\n\n\n\n\n\n\n\n\nIntroduction to git/GitHub\n\n\n\n\n\n\nmodule 1\n\n\nweek 2\n\n\nprogramming\n\n\nversion control\n\n\ngit\n\n\nGitHub\n\n\n\nVersion control is a game changer; or how I learned to love git/GitHub\n\n\n\n\n\nJan 21, 2025\n\n\nMarguerite Butler\n\n\n\n\n\n\n\n\n\n\n\n\nIntroduction to your computerʻs terminal utilities\n\n\n\n\n\n\nmodule 1\n\n\nweek 1\n\n\nprogramming\n\n\nfilesystem\n\n\nshell\n\n\n\nSo much power; or how I got my computer to do my bidding\n\n\n\n\n\nJan 16, 2025\n\n\nMarguerite Butler\n\n\n\n\n\n\n\n\n\n\n\n\nIntroduction and The Big Idea\n\n\n\n\n\n\nmodule 1\n\n\nweek 1\n\n\nintroduction\n\n\n\nThe big idea\n\n\n\n\n\nJan 14, 2025\n\n\nMarguerite Butler\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "resources.html",
    "href": "resources.html",
    "title": "Resources",
    "section": "",
    "text": "Learning R\n\nBig Book of R: https://www.bigbookofr.com\nList of resources to learn R (but also Python, SQL, Javascript): https://github.com/delabj/datacamp_alternatives/blob/master/index.md\nlearnr4free. Resources (books, videos, interactive websites, papers) to learn R. Some of the resources are beginner-friendly and start with the installation process: https://www.learnr4free.com/en\nData Science with R by Danielle Navarro: https://robust-tools.djnavarro.net"
  }
]